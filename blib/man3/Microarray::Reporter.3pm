.\" Automatically generated by Pod::Man 2.12 (Pod::Simple 3.05)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Microarray::Reporter 3"
.TH Microarray::Reporter 3 "2008-08-05" "perl v5.8.8" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Microarray::Reporter \- A Perl module for creating and manipulating microarray reporter objects
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&        my $oArray = microarray\->new($barcode,$data_file);      
\&        $oArray\->set_reporter_data;
\&        
\&        my $oReporter = $oArray\->get_reporter('RP11\-354D4');    # returns a single reporter object
\&        my $oReporter = array_reporter\->new('reporter 1');
\&        $oReporter\->add_reporter_spot($oSpot);
\&        $oReporter\->do_spot_qc;
\&        my $mean_log_ratio = $oReporter\->mean_log_ratios;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Microarray::Reporter is an object-oriented Perl module for creating and manipulating microarray reporter objects. It serves as a container into which you place spot objects that are replicates of the same genetic reporter, and returns average information about those spots.
.SH "METHODS"
.IX Header "METHODS"
.IP "\fBdo_spot_qc\fR" 4
.IX Item "do_spot_qc"
Performs \s-1QC\s0 on the spot level data. This uses a number of variables whose defaults are set by the Microarray module during initialisation of a Microarray object, and whose values can be changed using appropriate Microarray methods. The Microarray method Microarray/\*(L"should_reject_unique\*(R" causes the \s-1QC\s0 process to reject any reporter that contains only a single spot. It should be called on the microarray object before the Microarray/\*(L"set_reporter_data\*(R" method.
.IP "\fBreporter_id\fR" 4
.IX Item "reporter_id"
Name of the reporter
.IP "\fBgenetic_data\fR" 4
.IX Item "genetic_data"
An object containing relevant genetic data.
.IP "\fBget_reporter_spots\fR" 4
.IX Item "get_reporter_spots"
Returns a list of spot objects attributed to a reporter
.IP "\fBget_reporter_replicates\fR" 4
.IX Item "get_reporter_replicates"
Returns the number of spots attributed to a reporter
.IP "\fBspots_passed_qc\fR" 4
.IX Item "spots_passed_qc"
Returns the number of spots that passed \s-1QC\s0 criteria and are included in the reporter data
.IP "\fBmean_ch1\fR and \fBmean_ch2\fR" 4
.IX Item "mean_ch1 and mean_ch2"
Mean signal of all spots representing a reporter
.IP "\fBmean_ratios\fR and \fBmean_log_ratios\fR" 4
.IX Item "mean_ratios and mean_log_ratios"
Calculates the ratio (or log2 ratio) between the two signal channels for each replicate, and returns the mean of those values
.IP "\fBratio_means\fR and \fBlog_ratio_means\fR" 4
.IX Item "ratio_means and log_ratio_means"
Calculates the mean of the replicate signals for each channel, and returns their ratio (or log2 ratio)
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Microarray, Microarray::Spot
.SH "AUTHOR"
.IX Header "AUTHOR"
Christopher Jones, Gynaecological Cancer Research Laboratories, Institute for Women's Health, University College London.
.PP
<http://www.instituteforwomenshealth.ucl.ac.uk/AcademicResearch/Cancer/trl>
.PP
c.jones@ucl.ac.uk
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright 2008 by Christopher Jones, University College London
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
